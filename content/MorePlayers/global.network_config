network_type = "client-server"
reliable_send_buffer_size = 32768
reliable_receive_buffer_size = 32768

types = {
	bool = {type = "bool"}
	number = {type="int" min=-100 max=100}
	hash = {type = "int64" min = 0 max = 18446744073709551615}
	time = {type = "int" min = -1 max = 65534}
	t_value = {type="float" min = 0 max = 1}
	position_single = {type = "float" min = -655.35 max = 655.36 bits = 17 tolerance=0.01}
	rotation_single = {type = "float" min = -3.15 max = 3.15 bits = 19 tolerance=0.01}
	angle = {type="float" min=0 max=6.29 bits=20}
	position = {type = "vector3" min = -655.35 max = 655.36 bits = 17 tolerance=0.01}
	dummy_uniform_scale = {type = "float" min = 0.250, max = 16.125, bits = 7}
	enemy_uniform_scale = {type = "float" min = 0.500, max = 1.775, bits = 8}
	direction = {type = "vector3" min = -1.01 max = 1.01 bits = 20 tolerance=0.001}
	animation_translation_scale = {type = "vector3" min = -10 max = 10 bits = 16} // temporary crash fix-- should be smaller
	animation_rotation_scale = {type = "float" min = 0 max = 4 bits = 7}
	velocity = {type = "vector3" min = -250 max = 250 bits = 19 tolerance=0.05}
	enemy_velocity = {type = "vector3" min = -81.915 max = 81.920 bits = 15 tolerance=0.005}
	speed = {type = "float" min=-250 max=250 tolerance=0.05}
	payload_speed = {type="float" min=-10 max=10 tolerance=0.01 bits=20}
	unsigned_speed = {type="float" min=0 max=250 tolerance=0.05}
	enemy_rotation = {type="quaternion" bits=16, tolerance =0.05}
	enemy_yaw_rotation = {type = "float" min = -3.15 max = 3.15 bits = 8}
	dummy_yaw_rotation = {type = "float" min = -3.15 max = 3.15 bits = 8}
	rotation = {type = "quaternion" bits = 19 tolerance=0.01}
	string = {type = "string"}
	string_array = {type = "array", element = "string", max_size = 3}
	
	// Official game
	//local_player_id = {type ="int" min=0 max=7} //0 is no local_player_id
	
	// Modded realm
	local_player_id = {type ="int" min=0 max=16}
	
	anim_event = {type = "int" min = 1 max = 1024}
	game_object_id = {type = "int" min = 0 max = 65535}
	lookup = {type="int" min=1 max=1024}
	connection_fail_type = {type = "int", min = 1, max = 17}
	bt_action_name = {type="int" min=1 max=256}
	animation_variable_float = {type="float" min=-12.0 max=12.0 tolerance=0.05}
	health = {type = "float" min = 0 max = 4095.75 bits=14}
	unit_node = {type = "int" min=0 max=255}
	anim_state = {type = "int" min = 0 max = 4095}
	level_unit_index = {type = "int" min = 0 max = 65535}
	chat_channel_id = {type = "int" min = 1 max = 8}
	peer_id = {type = "int64"}
	lobby_id = {type = "int64"}
	damage_hotjoin_sync = {type = "float" min = 0 bits=14 max = 4095.75}
	damage = {type = "float" min = 0 bits=10 max = 255.75}
	hit_zone = {type = "int" min=0 max = 15 } // 0 = no specific hit zone
	story_time = {type="float" min=-3600 max=3600 bits=20}
	headshot_multiplier = {type="int" min=1 max=8 }
	backstab_multiplier = {type="float" min=1 max=2.5 bits=2 }
	fatigue_cost_multiplier = {type="float" min=0 max=4 tolerance=0.5 }
	boost_curve_multiplier = { type = "float" min = 0 max = 20 tolerance = 0.1 }
	multiplier = {type="float" min=0 max=10 }
	time_multiplier = {type="float" min=0.01 max=2}
	ping = {type="int" min=0 max=999}
	ping_float = {type="float" min=0 max=1 bits=8}
	ping_times = {type="array", element="ping_float", max_size=4}
	tentacle_point_array = {type="array", element="position", max_size=8}
	breed = {type="int" min=0 max = 63}
	weapon_id = { type="int" min=1 max=16384}
	damage_source_id = { type="int" min=1 max=16384}
	projectile_speed = { type="int" min=0 max=10000}
	projectile_angle = { type="int" min=-512 max=512}
	damage_interval = { type="int" min=0 max=31}
	radius = { type="int" min=0 max=63}
	life_time = { type="int" min=0 max=31}
	slot_id = { type="int" min=0 max=15}
	career_id = { type="int" min=0 max=15}
	profile_index = {type="int" min=0 max =5}
	int_1_4 = { type="int" min=1 max=4}
	int_32 = { type = "int", min = -2147483648, max = 2147483647 }
	speed_int = { type="int" min = -10000 max = 10000}
	int_velocity = { type="array" element="speed_int" max_size=3}
	pos_int = { type="int" min = -1000000 max = 1000000}
	int_position = { type="array" element="pos_int" max_size=3}
	rot_int = { type="int" min = -255 max = 255}
	int_rotation = { type="array" element="rot_int" max_size=4}
	inventory_package_list = { type = "array" element = "weapon_id" max_size = 120 }
	fatigue_points = { type="int" min=1 max=32}
	taunt_duration = {type="float", min=0, max=15.75, bits=6}
	taunt_radius = {type="float", min=0, max=15.75, bits=6}
	short_time = { type="float", min=0, max=2, bits=12}
	clock_time = { type="float" min=0 max=36000 bits=20 tolerance=0.01}
	aoe_push_mass = { type="int" min=0 max=15}
	fall_distance = { type="int" min=0 max=255 }
	actor_index = {type="int" min=0 max=255}
	limited_item_index = {type="int" min=1 max=16}
	scale = {type="int" min=0 max=100}
	music_group_states = {type="int" min=1 max=32}
	objective_socket_id = {type="int" min=1 max=16}
	uint_8  = { type = "int" min = 0, max = 255 }
	uint_16 = { type = "int" min = 0, max = 65535 }
	uint_19 = { type = "int" min = 0, max = 524287 }
	uint_32 = { type = "int" min = 0, max = 4294967295 }
	range = {type="int", min = 0, max = 100}
	marker_lookup = {type="int" min=1 max=128}
	dialogue_event_data = {type="array" element="lookup" max_size=8}
	dialogue_event_data_type = {type="array" element="bool" max_size=8}
	dialogue_lookup = {type="int" min=1 max=8192}
	dialogue_index = {type="int" min=1 max=32}
	mission_data = {type="array" element="time" max_size=8}
	anim_variable_index = {type="int" min=0 max=255}
	light_weight_projectile_speed = {type="int", min=1, max=128}
	light_weight_projectile_index = {type="int", min=1, max=128}
	light_weight_projectile_particle_lookup = {type="int", min=1, max=4}
	vote_data_peer_id = {type="array" element="peer_id" max_size=4}
	vote_data_lookup = {type="array" element="lookup" max_size=9}
	vote_data_deed = {type="array" element="weapon_id" max_size=4}
	backend_session_id = {type="int", min=0, max=4294967295} // Unsigned int 2^32-1
	player_level = { type="int" min=0 max=65535 }
	hooked_time = {type="float" min = 0 max = 7, tolerance=0.01 }
	level_seed = {type="int", min=0 max=4294967295} // Unsigned int 2^32-1
	profile_array = {type="array" element="peer_id" max_size=6}
	player_id_array = {type="array" element="local_player_id" max_size=6}
	statistics_path = {type="array" element="statistics_path_lookup" max_size=5}
	statistics_path_lookup = {type="int" min=1, max=256}
	buff_proc_attack_types  = {type="int" min=1, max=8}
	buff_weapon_types  = {type="int" min=1, max=4}
	percent = {type="int", min=0, max=100}
	terror_flow_event = {type="int" min=1, max=256}
	action = {type="int" min=1 max=64}
	sub_action = {type="int" min=1 max=128}
	item_template_name = {type ="int" min=1 max=512}
	damage_profile = {type="int", min=1, max=1024}
	power_level = { type = "int", min = 0, max = 2000 }
	stagger_duration_modifier = { type = "float", min = 0, max = 2, tolerance = 0.05 }
	stagger_distance_modifier = { type = "float", min = 0, max = 2, tolerance = 0.05 }
	buff_instances = {type="int" min=1 max=16}
	boon_ids = {type="array", element="lookup", max_size=10}
	boon_remaining_durations = {type="array", element="time", max_size=10}
	buff_value = {type="float", min=0, max=1, tolerance=0.05}
	max_overcharge = {type="int" min=0 max=63}

	proc_function_lookup = {type="int" min=1, max=128}

	enemy_package_loader_connection_key = { type="int" min=0 max=255 }
	enemy_package_loader_bitmask_array = { type="array" element="uint_32" max_size=4 }

	server_controlled_buff_id = { type = "int" min = 0 max = 255 }

	damage_type = {type="int" min=1 max=128}
	hit_react_type =  {type="int" min=1 max=3}
	ragdoll_actor = {type="int" min=1 max=32}
	player_status = {type="int", min=1, max=64}
	sound_event = {type="int", min=1, max=256}
	surface_material_effect = {type="int" min=1, max=128}
	vfx = {type="int" min=1, max=64}
	vfx_array = {type="array" element="vfx" max_size=15}
	position_array = {type="array" element="position" max_size=15}
	sound_event_array = {type="array" element="sound_event" max_size=15}
	health_status_lookup = {type="int" min=1 max=8}

	weight = {type="float" min=-1 max=16}
	weight_array = {type="array" element="weight" max_size=64}

	payload_spline_index = {type="int" min=1 max=256}
	payload_spline_subdivisions = {type="int" min=1 max=16}
	payload_spline_t = {type="float" min=0, max=1}

	wounds =  {type="int" min=-1 max=6}
	attack_arm = {type="int" min=1, max=2}

	interaction_state_lookup = {type="int" min=1 max=8}
	interaction_lookup = {type="int" min=1 max=32}

	small_lookup = {type="int" min=1, max=16}
	medium_lookup = {type="int" min=1, max=32}
	small_lookup_from_zero = {type="int" min=0, max=15}
	inventory_lookup = {type="int" min=1, max=64}
	teleports = {type="int" min=1, max=8}
	game_object_type = {type="int" min=1 max=64}
	husk_unit = {type="int" min=1, max=256} //was 68 last I checked, this could be massively optimized, probably down to like 8-16 just by making seperate lookups for different game object types.

	mutator_lookup = {type="int", min=1, max=64}
	mutator_array = {type="array", element="mutator_lookup", max_size=4}

	flow_states = {type="int" min=1, max=256}
	flame_wave_lateral_speed = {type="float" min=-6 max=6 bits=13}
	flame_wave_distance =  {type="float" min=0, max=31 bits=20, tolerance=1}
	small_percentage = {type="float" min=0, max=1 bits=7}
	percentage = {type="float" min=0, max=1 bits=20}
	sync_names = {type="int" min=1 max=4}
	fuse_time = {type="float" min=0, max=63.75, bits=8}

	nav_tag_volume_layer_id = {type="int" min=20, max=83}

	tentacle_reach_distance = {type="float" min=0 max=31, bits=16}
	tentacle_state = {type="int" min=1, max=8}

	talent_id = {type="int" min=0 max=256}

	debug_command_lookup = {type="int" min=1, max=7}

	peer_id_table = {type="array" element="peer_id" max_size=4}

	twitch_lookup = {type="int" min=0 max=1023}
	twitch_options = {type="array", element="uint_16", max_size=5}
	twitch_template_lookup = {type="array", element="twitch_lookup", max_size=5}

	vortex_template_id = {type="int" min=1 max=4}
	tentacle_template_id = {type="int" min=1 max=4}

	item_set_id = {type="int" min=0 max=3}
	projectile_state = {type="int" min=0 max=3}

	performance_title_table = {type="array" element="lookup" max_size=4}
	performance_title_amount_table = {type="array" element="uint_16" max_size=4}
	breed_freezer_queue_data = {type="array" element="uint_8" max_size=32}
	packed_breed_go_ids = {type="array" element="game_object_id" max_size=128}
}

// INFO:
// "session_bound" means that the rpc is bound to the current game session and other peers will disregard it if they are no longer a part of that game session.
// The case this could happen is for instance between rounds

messages = {
	// Game join rpcs
	rpc_notify_lobby_joined = { args = ["slot_id" "hash"] } // Client responds after server sends rpc_notify_connected
	rpc_set_player_name = { args = ["string"] } // client responds to a dedicated server after rpc_notify_connected
	rpc_level_loaded = { args = ["lookup"] } // level id
	rpc_is_ingame = { } // Last none-session-bound-rpc in handshake protocol.
	rpc_matchmaking_handshake_start = 					{ args = ["string"] }

	rpc_notify_in_post_game = { args = ["bool"] }
	rpc_post_game_notified = { args = ["bool"] }

	rpc_update_twitch_vote = { args = ["small_lookup" "uint_16" "string" "uint_8" "lookup"] session_bound = true }

	rpc_matchmaking_handshake_reply = 					{ args = ["string" "string"] }
	rpc_matchmaking_handshake_complete = 				{ args = ["string" "string"] }
	rpc_matchmaking_request_profiles_data = 			{ args = ["string" "string"] }
	rpc_matchmaking_join_game =  						{ args = ["string" "string"] }
	rpc_matchmaking_request_selected_level = 			{ args = ["string" "string"] }
	rpc_matchmaking_request_selected_difficulty = 		{ args = ["string" "string"] }
	rpc_matchmaking_request_status_message = 			{ args = ["string" "string"] }

	rpc_matchmaking_request_join_lobby =  				{ args = ["string" "string" "lobby_id" "bool"] }
	rpc_matchmaking_request_join_lobby_reply =  		{ args = ["string" "string" "lookup"] }
	rpc_matchmaking_request_profile =  					{ args = ["string" "string" "number"] } // profile
	rpc_matchmaking_request_profile_reply =				{ args = ["string" "string" "number" "bool"]}

	rpc_matchmaking_update_profiles_data = 				{ args = ["string" "string" "profile_array" "player_id_array"] }
	rpc_matchmaking_request_profiles_data_reply = 		{ args = ["string" "string" "profile_array" "player_id_array"] }

	rpc_matchmaking_sync_quickplay_data =				{ args = ["weight_array"] }
	rpc_matchmaking_request_quickplay_data =			{}

	rpc_request_painting = 								{}
	rpc_send_painting = 								{ args = ["string"] }

    rpc_matchmaking_request_selected_level_reply = 		{ args = ["string" "string" "lookup"] }

    rpc_matchmaking_request_selected_difficulty_reply = { args = ["string" "string" "lookup"] }
	rpc_matchmaking_status_message = 					{ args = ["string" "string" "string"] }

	rpc_matchmaking_broadcast_game_server_ip_address =	{ args = ["string" "string" "string"] }
	rpc_game_server_set_group_leader =					{ args = ["peer_id"] }
	rpc_game_server_reserve_slots = 					{ args = ["string" "string" "peer_id_table"] }

	rpc_clear_game_mode_event_data = { session_bound = true }
	rpc_set_game_mode_event_data = { args = ["mutator_array"] session_bound = true }

	rpc_set_quick_game = { args = ["bool"] session_bound = true }

	rpc_trigger_local_afk_system_message = { args = ["string" "peer_id" ] session_bound = true }

	rpc_ping = { args = ["string" "string" "ping_times"] }
	rpc_pong = { args = ["string" "string"] }

	// server -> client
	rpc_notify_connected = {} // When client connects, server sends this.
	rpc_notify_selected_level = { args = ["string"] }
	rpc_loading_synced = { }
	rpc_reload_level = {}
	rpc_load_level = {args = ["lookup" "level_seed"] }
	rpc_game_started = { args = ["string"] session_bound = true}
	rpc_clear_peer_state = {}
	rpc_start_game_countdown = { }
	rpc_start_leave_game_countdown = { args = ["time"] }
	rpc_start_game_countdown_finished = {}
	rpc_set_matchmaking = { args = ["string" "string" "bool" "bool" "lookup" "lookup" "bool"] }
	rpc_set_migration_host = { args = ["peer_id" "bool"] }

	rpc_client_connection_state = { args = ["string" "lookup"] } // peer_id & state
	rpc_disconnect_peer = { args = ["string"] }
	rpc_connection_failed = { args = ["connection_fail_type"] }
	rpc_cancel_matchmaking = {} // sent from leader to dedicated server when cancelling

	rpc_anim_event = { args = ["anim_event" "game_object_id"] session_bound = true}
	rpc_anim_event_variable_float = { args = ["anim_event" "game_object_id" "anim_event" "animation_variable_float"] session_bound = true}
	rpc_anim_set_variable_float = { args = ["game_object_id" "anim_event" "animation_variable_float"] session_bound = true}

	rpc_anim_set_variable_by_distance = { args = ["game_object_id" "anim_variable_index" "position" "int_1_4" "bool" ] session_bound = true}
	rpc_anim_set_variable_by_time = { args = ["game_object_id" "anim_variable_index" "uint_16" "int_1_4" ] session_bound = true}
	rpc_update_anim_variable_done = { args = ["game_object_id" ]  session_bound = true}

	rpc_attack_hit = { args = [ "damage_source_id" "game_object_id" "game_object_id" "hit_zone" "position" "direction" "damage_profile" "power_level" "uint_8" "boost_curve_multiplier" "bool" "bool" "bool" "lookup" "bool" "bool" "backstab_multiplier" "bool" ]  session_bound = true}

	rpc_sync_damage_taken= { args = ["game_object_id", "bool" "bool" "damage_hotjoin_sync", "health_status_lookup"] session_bound = true}

	rpc_request_knock_down = { args = ["game_object_id"] session_bound = true}
	rpc_request_heal_wounds = { args = ["game_object_id"] session_bound = true}
	rpc_request_revive = { args = ["game_object_id" "game_object_id"] session_bound = true}

	rpc_request_heal = { args = ["game_object_id" "damage" "small_lookup"] session_bound = true}
	rpc_heal = { args = ["game_object_id" "bool" "game_object_id" "bool" "damage" "medium_lookup"] session_bound = true}

	rpc_status_change_bool = {args = ["player_status" "bool" "game_object_id" "game_object_id"] session_bound = true}
	rpc_status_change_int = {args = ["player_status" "small_lookup" "game_object_id"] session_bound = true}
	rpc_status_change_int_and_unit = {args = ["player_status" "small_lookup_from_zero" "game_object_id" "game_object_id"] session_bound = true}
	rpc_hooked_sync = {args = ["player_status" "game_object_id" "hooked_time" ] session_bound = true}
	rpc_set_wounded = {args = [ "game_object_id" "bool" "small_lookup" ] session_bound = true}
	rpc_disable_locomotion = {args = ["game_object_id" "bool" "int_1_4" ] session_bound = true}
	rpc_set_animation_driven_script_movement = {args = ["game_object_id" "position" "rotation" "bool"] session_bound = true}
	rpc_set_animation_driven = {args = ["game_object_id" "position" "rotation" "bool"] session_bound = true}
	rpc_set_script_driven = {args = ["game_object_id" "bool"] session_bound = true}
	rpc_set_affected_by_gravity = {args =["game_object_id" "bool"] session_bound = true}

	rpc_set_animation_translation_scale = {args = ["game_object_id" "animation_translation_scale"] session_bound = true}
	rpc_set_animation_rotation_scale = {args = ["game_object_id" "animation_rotation_scale"] session_bound = true}
	rpc_constrain_ai = {args = ["game_object_id" "bool" "position_array"] session_bound = true}

	rpc_add_damage_network = { args = ["game_object_id" "bool" "game_object_id" "bool" "damage" "hit_zone" "damage_type" "position" "direction" "damage_source_id" "hit_react_type" "bool" "bool"] session_bound = true}
	rpc_add_damage = { args = ["game_object_id" "bool" "game_object_id" "bool" "damage" "hit_zone" "damage_type" "position" "direction" "damage_source_id" "ragdoll_actor" "hit_react_type" "bool" "bool" "bool"] session_bound = true}
	rpc_take_falling_damage = { args = ["game_object_id" "fall_distance"] session_bound = true}
	rpc_suicide = { args = [ "game_object_id" ] session_bound = true}
	rpc_weapon_blood = { args = ["game_object_id" "damage_source_id"] session_bound = true}

	rpc_forced_kill = { args = ["game_object_id" "damage_type" ] session_bound = true }

	rpc_create_liquid_damage_area = { args = ["game_object_id" "position" "direction" "small_lookup"] session_bound = true }
	rpc_add_liquid_damage_blob = { args = ["game_object_id" "uint_19" "position" "bool" ] session_bound = true}
	rpc_update_liquid_damage_blob = { args = ["game_object_id" "uint_19", "int_1_4" ] session_bound = true}

	rpc_create_damage_wave = { args = ["game_object_id" "position" "position" "small_lookup"] session_bound = true }
	rpc_add_damage_wave_fx = { args = ["game_object_id" "position" ] session_bound = true}
	rpc_damage_wave_set_state = { args = ["game_object_id" "int_1_4" ] session_bound = true}

	rpc_add_damage_blob_fx = { args = ["game_object_id" "position" "small_percentage" ] session_bound = true}
	rpc_abort_damage_blob = { args = ["game_object_id" ] session_bound = true}

	rpc_play_particle_effect = { args = ["vfx", "game_object_id", "unit_node", "position", "rotation" "bool"] session_bound = true}

	rpc_sync_anim_state_1 =  { args = ["game_object_id", "anim_state"] session_bound = true }
	rpc_sync_anim_state_2 =  { args = ["game_object_id", "anim_state", "anim_state"] session_bound = true }
	rpc_sync_anim_state_3 =  { args = ["game_object_id", "anim_state", "anim_state", "anim_state"] session_bound = true }
	rpc_sync_anim_state_4 =  { args = ["game_object_id", "anim_state", "anim_state", "anim_state", "anim_state"] session_bound = true }
	rpc_sync_anim_state_5 =  { args = ["game_object_id", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state"] session_bound = true }
	rpc_sync_anim_state_6 =  { args = ["game_object_id", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state"] session_bound = true }
	rpc_sync_anim_state_7 =  { args = ["game_object_id", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state"] session_bound = true }
	rpc_sync_anim_state_8 =  { args = ["game_object_id", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state"] session_bound = true }
	rpc_sync_anim_state_9 =  { args = ["game_object_id", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state"] session_bound = true }
	rpc_sync_anim_state_10 =  { args = ["game_object_id", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state"] session_bound = true }
	rpc_sync_anim_state_11 =  { args = ["game_object_id", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state"] session_bound = true }
	rpc_sync_anim_state_12 =  { args = ["game_object_id", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state", "anim_state"] session_bound = true }

	rpc_ping_unit = { args = ["game_object_id", "game_object_id" "bool"] session_bound = true }
	rpc_ping_unit_exclusive_flash = { args = ["game_object_id", "game_object_id" "peer_id" "local_player_id"] session_bound = true }
	rpc_remove_unit_ping = { args = ["game_object_id"] session_bound = true }

	rpc_link_unit = { args = ["game_object_id" "unit_node" "game_object_id" "unit_node" ] session_bound = true}

	rpc_chat_message = { args = ["chat_channel_id" "peer_id" "local_player_id" "string" "string_array" "bool" "bool" "bool" "bool" "bool"] session_bound = false}

	rpc_play_melee_hit_effects = { args = ["sound_event" "position" "small_lookup" "game_object_id"] session_bound = true}
	rpc_surface_mtr_fx = { args = ["surface_material_effect", "game_object_id", "position", "rotation", "direction", "rot_int"] session_bound = true }
	rpc_surface_mtr_fx_lvl_unit = { args = ["surface_material_effect", "level_unit_index", "position", "rotation", "direction", "rot_int"] session_bound = true }
	rpc_skinned_surface_mtr_fx = { args = ["surface_material_effect", "position", "rotation", "direction"] session_bound = true }

	rpc_set_blocking = { args = ["game_object_id" "bool"] session_bound = true}
	rpc_player_blocked_attack = { args = ["game_object_id" "fatigue_points" "game_object_id" "fatigue_cost_multiplier" "bool" "string" "bool"] session_bound = true}

	rpc_start_beam = { args = ["game_object_id" "vfx" "vfx" "range"] session_bound = true}
	rpc_end_beam = { args = ["game_object_id"] session_bound = true}

	rpc_start_geiser = { args = ["game_object_id" "vfx" "position_single" "position_single" "position_single" "position_single"] session_bound = true}
	rpc_end_geiser = { args = ["game_object_id"] session_bound = true}

	rpc_start_flamethrower = { args = ["game_object_id" "vfx"] session_bound = true}
	rpc_end_flamethrower = { args = ["game_object_id"] session_bound = true}

	rpc_play_simple_particle_with_vector_variable = { args = ["vfx" "position" "vfx" "position" ] session_bound = true}

	rpc_show_inventory = { args = ["game_object_id" "bool"] session_bound = true}

	rpc_is_ready_for_transition = { session_bound = true }

	rpc_set_catapulted = { args = ["game_object_id" "bool" "velocity" ] session_bound = true}

	rpc_activate_end_zone = { args = [ "number" "bool" ] session_bound = true }

	//rpc_on_skip_gdc_intro = { session_bound = true }
	rpc_create_explosion = {args = ["game_object_id" "bool" "position" "rotation" "lookup" "small_percentage" "damage_source_id" "power_level" "bool"] session_bound = true}
	rpc_change_tentacle_state = { args = ["game_object_id" "game_object_id" "tentacle_state" "tentacle_reach_distance" "clock_time" ] session_bound = true}
	rpc_sync_tentacle_path = { args = [ "game_object_id" "tentacle_point_array" ] session_bound = true}
	rpc_set_corruptor_beam_state = { args = [ "game_object_id" "string" "game_object_id"] session_bound = true}

	//VOTING
	rpc_vote = { args = [ "number" ] session_bound = true }
	rpc_server_request_start_vote_peer_id = { args = [ "lookup" "vote_data_peer_id" ] session_bound = true }
	rpc_server_request_start_vote_lookup = { args = [ "lookup" "vote_data_lookup" ] session_bound = true }
	rpc_server_request_start_vote_deed = { args = [ "lookup" "vote_data_deed" ] session_bound = true }
	rpc_client_start_vote_peer_id = { args = [ "lookup" "vote_data_peer_id" "peer_id_table" ] session_bound = true }
	rpc_client_start_vote_lookup = { args = [ "lookup" "vote_data_lookup" "peer_id_table" ] session_bound = true }
	rpc_client_start_vote_deed = { args = [ "lookup" "vote_data_deed" "peer_id_table" ] session_bound = true }
	rpc_client_add_vote = { args = [ "peer_id" "number" ] session_bound = true }
	rpc_client_complete_vote = { args = [ "number" ] session_bound = true }
	rpc_client_vote_kick_enabled = { args = ["bool"] session_bound = true }
	rpc_update_voters_list = { args = ["peer_id_table"] session_bound = true }

	rpc_give_equipment = { args = [ "game_object_id" "game_object_id" "slot_id" "weapon_id" "position"] session_bound = true}
	rpc_add_equipment = { args = [ "game_object_id" "slot_id", "weapon_id" "lookup"] session_bound = true}
	rpc_add_equipment_limited_item = { args = [ "game_object_id" "slot_id", "weapon_id" "level_unit_index" "limited_item_index" ] session_bound = true}
	rpc_add_equipment_buffs = { args = [ "game_object_id" "slot_id" "lookup" "lookup" "buff_value" "lookup" "lookup" "buff_value" "lookup" "lookup" "buff_value" "lookup" "lookup" "buff_value" ] session_bound = true}
	rpc_add_attachment_buffs = { args = [ "game_object_id" "slot_id" "lookup" "lookup" "buff_value" "lookup" "lookup" "buff_value" "lookup" "lookup" "buff_value" "lookup" "lookup" "buff_value" ] session_bound = true}
	rpc_wield_equipment = { args = [ "game_object_id" "slot_id" ] session_bound = true}
	rpc_destroy_slot = { args = [ "game_object_id" "slot_id" ] session_bound = true}
	rpc_enemy_is_alerted = { args = [ "game_object_id" "bool" ] session_bound = true}
	rpc_alert_enemy = { args = [ "game_object_id" "game_object_id" ] session_bound = true}
	rpc_enemy_has_target = { args = [ "game_object_id" "bool"] session_bound = true}
	rpc_ai_inventory_wield = { args = [ "game_object_id" "item_set_id" ] session_bound = true}
	rpc_ai_drop_single_item = { args = [ "game_object_id" "slot_id" "small_lookup"] session_bound = true}
	rpc_ai_show_single_item = { args = [ "game_object_id" "slot_id" "bool" ] session_bound = true}

	rpc_ai_weapon_shoot_start = { args = [ "game_object_id" "time"] session_bound = true}
	rpc_ai_weapon_shoot = { args = [ "game_object_id" ] session_bound = true}
	rpc_ai_weapon_shoot_end = { args = [ "game_object_id" ] session_bound = true}

	rpc_play_2d_audio_event = {args = ["sound_event"] session_bound = true}
	rpc_server_audio_event = { args = [ "sound_event" ] session_bound = true}
	rpc_server_audio_event_at_pos = { args = [ "sound_event" "position" ] session_bound = true}
	rpc_server_audio_position_event = { args = [ "sound_event" "position" ] session_bound = true}
	rpc_server_audio_unit_event = { args = [ "sound_event" "game_object_id" "unit_node"] session_bound = true}
	rpc_server_audio_unit_dialogue_event = { args = [ "sound_event" "game_object_id" ] session_bound = true}
	rpc_server_audio_unit_param_string_event = { args = [ "sound_event" "game_object_id" "unit_node" "int_1_4" "int_1_4"] session_bound = true}
	rpc_server_audio_unit_param_int_event = { args = [ "sound_event" "game_object_id" "unit_node" "int_1_4" "int_1_4"] session_bound = true}
	rpc_server_audio_unit_param_float_event = { args = [ "sound_event" "game_object_id" "unit_node" "int_1_4" "t_value"] session_bound = true}
	rpc_client_audio_set_global_parameter_with_lerp = { args = ["lookup" "percentage"] session_bound = true}
	rpc_client_audio_set_global_parameter = { args = ["lookup" "uint_16"] session_bound = true}
	rpc_set_client_game_privacy = { args = ["bool"] session_bound = true }

	// Interaction rpc's
	rpc_interaction_abort = {args = ["game_object_id"] session_bound = true}
	rpc_interaction_denied = {args = ["game_object_id"] session_bound = true}
	rpc_interaction_approved = {args = ["interaction_lookup" "game_object_id" "game_object_id" "bool"] session_bound = true}
	rpc_interaction_completed = {args = ["game_object_id" "int_1_4"] session_bound = true}

	rpc_gm_event_end_conditions_met = { args = ["lookup" "bool" "percentage"] session_bound = true }
	rpc_gm_event_round_started = { args = [] session_bound = true }
	rpc_generic_interaction_request = {args = ["game_object_id" "game_object_id" "bool" "interaction_lookup"] session_bound = true}

	rpc_sync_door_state = {args = ["level_unit_index" "lookup"] session_bound = true}
	rpc_sync_boss_door_state = {args = ["level_unit_index" "lookup" "lookup"] session_bound = true}
	rpc_sync_interaction_state = {args = [ "game_object_id" "interaction_state_lookup" "interaction_lookup" "game_object_id" "time" "time" "bool"] session_bound = true}
	rpc_sync_interactable_used_state = {args = [ "game_object_id" "bool" "bool"] session_bound = true}

	rpc_inn_room_created = { args = ["peer_id" "small_lookup" "profile_index"] }
	rpc_inn_room_destroyed = { args = ["peer_id"] }
	
	rpc_force_use_pickup = {args = [ "lookup"] session_bound = true}
	rpc_spawn_pickup_with_physics = { args = [ "lookup" "position" "rotation" "lookup" ] session_bound = true }
	rpc_spawn_pickup = { args = [ "lookup" "position" "rotation" "lookup" ] session_bound = true }
	rpc_spawn_pickup_projectile = { args = ["lookup" "lookup" "int_position" "int_rotation" "int_velocity" "int_velocity" "lookup" "lookup"] session_bound = true }
	rpc_spawn_pickup_projectile_limited = { args = ["lookup" "lookup" "int_position" "int_rotation" "int_velocity" "int_velocity" "lookup" "level_unit_index" "limited_item_index" "lookup"] session_bound = true }
	rpc_spawn_explosive_pickup_projectile = { args = ["lookup" "lookup" "int_position" "int_rotation" "int_velocity" "int_velocity" "lookup" "damage" "clock_time" "fuse_time" "weapon_id" "lookup"] session_bound = true }
	rpc_spawn_explosive_pickup_projectile_limited = { args = ["lookup" "lookup" "int_position" "int_rotation" "int_velocity" "int_velocity" "lookup" "level_unit_index" "limited_item_index" "damage" "clock_time" "fuse_time" "weapon_id" "lookup"] session_bound = true }
	rpc_client_create_aoe = { args = ["game_object_id" "position" "damage_source_id" "lookup"] session_bound = true }
	rpc_area_damage = { args = ["game_object_id" "position" ] session_bound = true }
	rpc_projectile_stopped = { args = ["game_object_id"] session_bound = true }
	rpc_drop_projectile = { args = ["game_object_id"] session_bound = true }
	rpc_generic_impact_projectile_impact = { args = ["game_object_id" "game_object_id" "level_unit_index" "position" "direction" "direction" "actor_index"] session_bound = true}
	rpc_generic_impact_projectile_force_impact = { args = ["game_object_id" "position"] session_bound = true}
	rpc_player_projectile_impact_level = { args = ["game_object_id" "level_unit_index" "position" "direction" "direction" "actor_index"] session_bound = true}
	rpc_player_projectile_impact_dynamic = { args = ["game_object_id" "game_object_id" "position" "direction" "direction" "actor_index"] session_bound = true}

	rpc_set_projectile_state = { args = ["game_object_id" "projectile_state"] session_bound = true }

	rpc_to_client_spawn_player = { args = [ "local_player_id" "lookup" "position" "rotation" "bool" "percent" "percent" "weapon_id" "weapon_id" "weapon_id"] session_bound = true }
	rpc_to_client_respawn_player = { args = [ "local_player_id" "profile_index" "game_object_id" "weapon_id" "weapon_id" "weapon_id"] session_bound = true }
	rpc_respawn_confirmed = { args = ["local_player_id"] session_bound = true }
	rpc_taunt = { args = ["game_object_id", "taunt_radius", "taunt_duration", "bool", "bool"], session_bound = true }

	rpc_server_mark_profile_used = { args = [ "peer_id" "local_player_id" "profile_index" "profile_index" ] }
	rpc_client_select_inventory = { args = [ "local_player_id" "inventory_package_list" "inventory_package_list" "uint_16" ] }
	rpc_client_inventory_map_loaded = { args = [ "uint_16" ] }
	rpc_server_set_inventory_packages = { args = [ "uint_16" "inventory_package_list" ] }
	rpc_server_set_inventory_sync_id = { args = [ "uint_16" "uint_16" ] }
	rpc_server_inventory_all_synced = { args = [ "uint_16" ] }
	rpc_client_request_mark_profile = { args = [ "slot_id" "local_player_id"] session_bound = true }
	rpc_server_request_mark_profile_result = { args = [ "slot_id" "lookup" "local_player_id"] session_bound = true }


	rpc_from_server_load_breed_package =  { args = [ "enemy_package_loader_connection_key" "breed" ] }
	rpc_from_server_load_breeds_by_bitmask =  { args = [ "enemy_package_loader_connection_key" "enemy_package_loader_bitmask_array" ] }
	rpc_from_server_unload_breed_package =  { args = [ "enemy_package_loader_connection_key" "breed"  ] }
	rpc_from_client_loading_breed_package_done =  { args = [ "enemy_package_loader_connection_key" "breed" ] }
	rpc_from_client_sync_packages_load_done = { args = [ "enemy_package_loader_connection_key" ] }

	// Breed freezer
	rpc_breed_freeze_units =  { args = [ "packed_breed_go_ids" ] session_bound = true }
	rpc_breed_unfreeze_breed =  { args = [ "breed" "position" "rotation" "game_object_id" ] session_bound = true }
	rpc_breed_freezer_hot_join = { args = [ "bool" ] session_bound = true }
	rpc_breed_freezer_sync_breeds = { args = [ "breed_freezer_queue_data" "packed_breed_go_ids" ] session_bound = true }

	rpc_client_respawn_player = { session_bound = true }

	rpc_network_clock_sync_request = { args = [ "clock_time" ] session_bound = true }
	rpc_network_time_sync_response = { args = [ "clock_time" "clock_time" ] session_bound = true }
	rpc_network_current_server_time_request = { args = [ "clock_time" ] session_bound = true }
	rpc_network_current_server_time_response = { args = [ "clock_time" "clock_time" ] session_bound = true }

	rpc_start_network_timer = { args = [ "time" ] session_bound = true }
	rpc_add_buff = { args = [ "game_object_id" "lookup" "game_object_id" "server_controlled_buff_id" "bool" ] session_bound = true }
	rpc_add_volume_buff_multiplier = { args = [ "game_object_id" "lookup" "multiplier" ] session_bound = true }
	rpc_remove_volume_buff = { args = [ "game_object_id" "lookup" ] session_bound = true }
	rpc_remove_server_controlled_buff = { args = [ "game_object_id" "server_controlled_buff_id" ] session_bound = true }
	rpc_proc_event = { args = [ "peer_id" "local_player_id" "lookup" ] session_bound = true }
	rpc_remove_gromril_armour = { args = [ "game_object_id" ] session_bound = true }

	rpc_create_attachment = { args = [ "game_object_id" "slot_id" "weapon_id" ] session_bound = true }
	rpc_remove_attachment = { args = [ "game_object_id" "slot_id" ] session_bound = true }

	rpc_trigger_dialogue_event = { args = [ "game_object_id" "lookup" "dialogue_event_data" "dialogue_event_data_type"] session_bound = true }
	rpc_play_dialogue_event = { args = [ "game_object_id" "bool" "dialogue_lookup" "dialogue_index"] session_bound = true }
	rpc_interrupt_dialogue_event = { args = [ "game_object_id" "bool" ] session_bound = true }
	rpc_play_marker_event = { args = [ "game_object_id" "marker_lookup"] session_bound = true }

	rpc_teleport_unit_to = { args = ["game_object_id" "position" "rotation"] session_bound = true }

	rpc_objective_entered_socket_zone = { args = ["level_unit_index" "objective_socket_id"] session_bound = true }

	rpc_set_current_location = { args = ["game_object_id", "lookup"] session_bound = true }

	// Bulldozer Telemetry
	rpc_to_client_session_synch = { args = ["string"] session_bound = true }

	// Statistics
	rpc_increment_stat = { args = ["lookup"] session_bound = true }
	rpc_register_kill = { args = ["game_object_id"] session_bound = true }
	rpc_set_local_player_stat = { args = ["lookup", "uint_16"] session_bound = true }
	rpc_set_unsigned_number_session_stat = { args = ["small_lookup", "uint_8"] session_bound = true }

	//networked flow state functions
	rpc_flow_state_bool_changed = { args = ["game_object_id" "flow_states" "bool" "bool"] session_bound = true }
	rpc_flow_state_number_changed = { args = ["game_object_id" "flow_states" "number" "bool"] session_bound = true }
	rpc_flow_state_story_played = { args = ["flow_states" "story_time"] session_bound = true }
	rpc_flow_state_story_stopped = { args = ["flow_states" "story_time"] session_bound = true }

	rpc_enable_linked_movement = { args = ["game_object_id" "level_unit_index" "unit_node" "position"] session_bound = true }
	rpc_disable_linked_movement = { args = ["game_object_id"] session_bound = true }

	rpc_interest_point_chatter_update = { args = ["game_object_id" "bool" "t_value"] session_bound = true}

	rpc_start_mission = { args = ["lookup" "mission_data"] session_bound = true }
	rpc_start_mission_with_unit = { args = ["lookup" "level_unit_index" "mission_data"] session_bound = true }
	rpc_end_mission = { args = ["lookup" "bool"] session_bound = true }
	rpc_request_mission = { args = ["lookup"] session_bound = true }
	rpc_request_mission_with_unit = { args = ["lookup" "level_unit_index"] session_bound = true }
	rpc_update_mission = { args = ["lookup" "mission_data"] session_bound = true }
	rpc_request_mission_update = { args = ["lookup" "bool"] session_bound = true }

	rpc_kick_peer = { session_bound = true }

	rpc_sync_statistics_number = { args = ["peer_id" "local_player_id" "statistics_path" "uint_16" "uint_16"] session_bound = true}

	rpc_hot_join_nail_to_wall_fix = {args = ["game_object_id"] session_bound = true}

	// DEBUG
	// merged rpc_set_time_scale, rpc_set_time_paused and rpc_load_patched_items_into_backend into one debug_command
	rpc_debug_command = { args = ["debug_command_lookup" "number"] session_bound = true }

	rpc_tutorial_message = { args = ["lookup" "lookup"] session_bound = true }
	rpc_pacing_changed = { args = ["lookup"] session_bound = true }
	rpc_objective_unit_set_active = { args = ["level_unit_index" "bool"] session_bound = true}
	rpc_prioritize_objective_tooltip = { args = ["int_1_4"] session_bound = true }

	rpc_set_difficulty = { args = ["lookup" "bool"] session_bound = false }
	rpc_add_group_buff = { args = ["lookup" "buff_instances"] session_bound = true }
	rpc_remove_group_buff = { args = ["lookup" "buff_instances"] session_bound = true }
	rpc_buff_on_attack = { args = ["game_object_id" "game_object_id" "buff_proc_attack_types" "bool" "lookup" "uint_8" "buff_weapon_types"] session_bound = true }

	rpc_assist = { args = ["peer_id" "local_player_id" "peer_id" "local_player_id" "small_lookup" "game_object_id"] session_bound = true }
	rpc_coop_feedback = { args = ["peer_id" "local_player_id" "small_lookup" "peer_id" "local_player_id"] session_bound = true }

	rpc_enable_area_damage = { args = ["level_unit_index" "bool"] session_bound = true }

	rpc_set_observer_camera = { args = ["local_player_id"] session_bound = true }
	rpc_alert_enemies_within_range = { args = ["game_object_id" "position" "radius"] session_bound = true }

	rpc_replenish_fatigue = { args = ["game_object_id" "lookup"] session_bound = true }
	rpc_replenish_fatigue_other_players = { args = ["lookup"] session_bound = true }

	//light_weight_projectiles
	rpc_client_spawn_light_weight_projectile = { args = [ "damage_source_id" "game_object_id" "position" "direction" "light_weight_projectile_speed" "light_weight_projectile_particle_lookup" "bool"] session_bound = true}
	rpc_client_despawn_light_weight_projectile = {args=["light_weight_projectile_index"] session_bound = true}

	//voip
	rpc_voip_room_to_join = { args = [ "hash" ] }
	rpc_voip_room_request = { args = [ "bool" ] }

	rpc_play_husk_sound_event = { args =["game_object_id" "lookup"] session_bound = true}
	rpc_play_husk_unit_sound_event = { args = ["game_object_id" "unit_node" "lookup"] session_bound = true }
	rpc_play_first_person_sound = { args =["game_object_id" "lookup" "position"] session_bound = true}
	rpc_add_external_velocity = { args = ["game_object_id" "velocity"] session_bound = true}
	rpc_add_external_velocity_with_upper_limit = { args = ["game_object_id" "velocity" "speed"] session_bound = true}
	rpc_set_forced_velocity = { args = ["game_object_id" "velocity"] session_bound = true}

	//Backend
	rpc_backend_session_join = { args = ["backend_session_id"] session_bound = true }
	rpc_backend_session_done = { session_bound = true }

	rpc_create_bot_nav_transition = { args = ["position" "position" "position" "bool"] session_bound = true }
	rpc_set_on_moving_platform = { args =  ["game_object_id", "game_object_id"] session_bound = true }
	rpc_ladder_shake = { args = ["level_unit_index"] session_bound = true }
	rpc_hot_join_sync_linker_transporting = { args = ["game_object_id" "game_object_id"] session_bound = true}
	rpc_hot_join_sync_linker_transport_state = { args = ["game_object_id" "lookup", "story_time"] session_bound = true}
	rpc_hot_join_sync_health_status = { args = ["game_object_id" "wounds" "bool" "game_object_id"] session_bound = true}
	rpc_terror_event_trigger_flow = { args = ["terror_flow_event"] session_bound=true}
	rpc_set_allowed_nav_layer = { args = ["nav_tag_volume_layer_id" "bool"] session_bound = true }

	// Leaderboard
	rpc_client_leaderboard_register_score = { args = ["lookup" "lookup" "int_32" "uint_32" "profile_index" "uint_32" "profile_index" "uint_32" "profile_index" "uint_32" "profile_index" ] session_bound = true }

	rpc_remove_assist_shield = { args = ["game_object_id"] session_bound=true}

	rpc_set_boon_handler_game_object_fields = { args = ["game_object_id" "boon_ids" "boon_remaining_durations"] session_bound=true}

	// Debug
	rpc_event_manager_event = { args = ["string" "string"] } // event name, parameters

	// champion, could be replaced with game object fields
	rpc_set_ward_state = { args = ["game_object_id" "bool"] session_bound = true}
	rpc_play_fx = { args = ["vfx_array" "sound_event_array" "position_array"], session_bound = true}

	// Talents
	rpc_sync_talents = { args = ["game_object_id" "talent_id" "talent_id" "talent_id" "talent_id" "talent_id" ] session_bound = true }
	rpc_damage_taken_overcharge =  { args = [ "game_object_id" "damage" ] session_bound = true}

	// Payload
	rpc_payload_flow_event = { args = ["level_unit_index" "payload_spline_index"] session_bound = true }

	// Deeds
	rpc_select_deed = { args = ["weapon_id" "peer_id"] session_bound = true }
	rpc_reset_deed = {}
	rpc_deed_consumed = { session_bound = true }

	// Hit reactions
	rpc_set_hit_reaction_template = { args = ["game_object_id" "string"] session_bound = true }

	// End of level view
	rpc_signal_end_of_level_done = {}

	// Performance Title
	rpc_sync_performance_titles = { args = ["peer_id_table" "player_id_array" "performance_title_table" "performance_title_amount_table"] session_bound = true }

	// Cosmetics
	rpc_set_equipped_frame = { args = ["game_object_id" "lookup"] session_bound = true }

	// Social Wheel
	rpc_social_wheel_event = { args = ["peer_id" "lookup" "game_object_id"] session_bound = true }

	rpc_bot_unit_order = {  args = ["small_lookup" "game_object_id" "game_object_id" "peer_id" "local_player_id"] session_bound = true }
	rpc_bot_lookup_order = { args = ["small_lookup" "game_object_id" "medium_lookup" "peer_id" "local_player_id"] session_bound = true }

	//Sound effect system
	rpc_aggro_unit_changed = { args = ["game_object_id" "game_object_id" "bool"] session_bound = true }

	// Mutator Handler
	rpc_activate_mutator_client = { args = ["mutator_lookup"] session_bound = true }
	rpc_deactivate_mutator_client = { args = ["mutator_lookup"] session_bound = true }
}

objects = {
	player = {
		priority=1
		update_rate=3
		fields = [
			{name="go_type" type="game_object_type"}

			{name="network_id" 					type="peer_id"}
			{name="local_player_id" 			type="local_player_id"}
			{name="ping"						type="ping"}
			{name="player_controlled"			type="bool"}
			{name="clan_tag"					type="hash"}

			{name="boon_poll_time" 				type="time"}

			{name="boon_1_id" 					type="lookup"}
			{name="boon_1_remaining_duration"	type="time"}
			{name="boon_2_id" 					type="lookup"}
			{name="boon_2_remaining_duration"	type="time"}
			{name="boon_3_id" 					type="lookup"}
			{name="boon_3_remaining_duration"	type="time"}
			{name="boon_4_id" 					type="lookup"}
			{name="boon_4_remaining_duration"	type="time"}
			{name="boon_5_id" 					type="lookup"}
			{name="boon_5_remaining_duration"	type="time"}
			{name="boon_6_id" 					type="lookup"}
			{name="boon_6_remaining_duration"	type="time"}
			{name="boon_7_id" 					type="lookup"}
			{name="boon_7_remaining_duration"	type="time"}
			{name="boon_8_id" 					type="lookup"}
			{name="boon_8_remaining_duration"	type="time"}
			{name="boon_9_id" 					type="lookup"}
			{name="boon_9_remaining_duration"	type="time"}
			{name="boon_10_id" 					type="lookup"}
			{name="boon_10_remaining_duration"	type="time"}
		]
	}

	bot_player = {
		priority=1
		update_rate=3
		fields = [
			{name="go_type" type="game_object_type"}

			{name="network_id" 					type="peer_id"}
			{name="local_player_id" 			type="local_player_id"}
			{name="ping"						type="ping"}
			{name="player_controlled"			type="bool"}
			{name="clan_tag"					type="hash"}
		]
	}

	ai_player = {
		priority=1
		update_rate=3
		fields = [
			{name="go_type" type="game_object_type"}

			{name="player_id" 					type="game_object_id"}
		]
	}

	player_sync_data = {
		priority=1
		update_rate=3
		fields = [
			{name="go_type" type="game_object_type"}

			{name="network_id"					type="peer_id"}
			{name="local_player_id"				type="local_player_id"}

			{name="power_level"					type="power_level"}
			{name="best_aquired_power_level"	type="power_level"}
		]
	}

	player_unit = {
		priority=1
		update_rate=0.05
		fields = [
			{name="go_type" 								type="game_object_type"}
			{name="husk_unit" 								type="husk_unit"}

			{name="skin_name"								type="lookup"}
			{name="frame_name"								type="lookup"}
			{name="wounds"									type="wounds"}
			{name="level" 									type="player_level"}
			{name="prestige_level" 							type="player_level"}
			{name="position" 								type="position"}
			{name="pitch" 									type="rotation_single"}
			{name="yaw" 									type="rotation_single"}
			{name="aim_direction" 							type="direction"}
			{name="aim_position"							type="position"}
			{name="local_player_id"							type="local_player_id"}
			{name="owner_peer_id"							type="peer_id"}
			{name="velocity" 								type="velocity"}
			{name="average_velocity"						type="velocity"}
			{name="small_sample_size_average_velocity"		type="velocity"}
			{name="profile_id"								type="slot_id"}
			{name="career_id"								type="career_id"}
			{name="ammo_percentage"							type="small_percentage"}
			{name="ability_percentage"						type="small_percentage"}
			{name="overcharge_percentage"					type="small_percentage"}
			{name="overcharge_threshold_percentage"			type="small_percentage"}
			{name="overcharge_max_value"					type="max_overcharge"}

			{name="linked_movement"							type="bool"}
			{name="link_parent_id"							type="level_unit_index"}
			{name="link_parent_is_level_unit"				type="bool"}
			{name="link_node"								type="unit_node"}
			{name="link_offset"								type="position"}

			{name="moving_platform"							type="level_unit_index"}

			{name="has_moved_from_start_position"			type="bool"}
		]
	}

	player_bot_unit = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 								type="game_object_type"}
			{name="husk_unit" 								type="husk_unit"}

			{name="skin_name"								type="lookup"}
			{name="frame_name"								type="lookup"}
			{name="wounds"									type="wounds"}
			{name="level" 									type="player_level"}
			{name="prestige_level" 							type="player_level"}
			{name="position"								type="position"}
			{name="pitch" 									type="rotation_single"}
			{name="yaw" 									type="rotation_single"}
			{name="aim_direction" 							type="direction"}
			{name="aim_position" 							type="position"}
			{name="local_player_id"							type="local_player_id"}
			{name="owner_peer_id"							type="peer_id"}
			{name="velocity" 								type="velocity"}
			{name="average_velocity"						type="velocity"}
			{name="small_sample_size_average_velocity"		type="velocity"}
			{name="profile_id"								type="slot_id"}
			{name="career_id"								type="career_id"}
			{name="ammo_percentage"							type="small_percentage"}
			{name="ability_percentage"						type="small_percentage"}
			{name="overcharge_percentage"					type="small_percentage"}
			{name="overcharge_threshold_percentage"			type="small_percentage"}
			{name="overcharge_max_value"					type="max_overcharge"}

			{name="linked_movement"							type="bool"}
			{name="link_parent_id"							type="level_unit_index"}
			{name="link_parent_is_level_unit"				type="bool"}
			{name="link_node"								type="unit_node"}
			{name="link_offset"								type="position"}

			{name="moving_platform"							type="level_unit_index"}

			{name="has_moved_from_start_position"			type="bool"}
		]
	}

	player_unit_health = {
		priority=1
		update_rate=0.05
		fields = [
			{name="go_type" 					type="game_object_type"}

			{name="unit_game_object_id"			type="game_object_id"}
			{name="current_health" 				type="health"}
			{name="current_temporary_health"	type="health"}	//temporary health are given from everything except health kits/potions, and will decay over time
			{name="max_health" 					type="health"}
			{name="uncursed_max_health" 		type="health"}
			{name="current_wounds" 				type="wounds"}
			{name="max_wounds" 					type="wounds"}
		]
	}

	lure_unit = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="position"					type="position"}
			{name="rotation"					type="rotation"}
			{name="husk_unit" 					type="husk_unit"}
		]
	}

	ai_unit = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="health"						type="health"}
			{name="has_teleported"				type="teleports"}
			{name="position"					type="position"}
			{name="yaw_rot" 					type="enemy_yaw_rotation"}
			{name="velocity" 					type="enemy_velocity"}
			{name="breed_name" 					type="breed"}
			{name="uniform_scale"				type="enemy_uniform_scale"}
			{name="bt_action_name"				type="bt_action_name"}
		]
	}

	ai_unit_with_inventory = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="health"						type="health"}
			{name="has_teleported"				type="teleports"}
			{name="position"					type="position"}
			{name="yaw_rot" 					type="enemy_yaw_rotation"}
			{name="velocity" 					type="enemy_velocity"}
			{name="breed_name" 					type="breed"}
			{name="uniform_scale"				type="enemy_uniform_scale"}
			{name="inventory_configuration"		type="inventory_lookup"}
			{name="bt_action_name"				type="bt_action_name"}
		]
	}

	ai_unit_with_inventory_and_shield = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="health"						type="health"}
			{name="has_teleported"				type="teleports"}
			{name="position"					type="position"}
			{name="yaw_rot" 					type="enemy_yaw_rotation"}
			{name="velocity" 					type="enemy_velocity"}
			{name="breed_name" 					type="breed"}
			{name="uniform_scale"				type="enemy_uniform_scale"}
			{name="inventory_configuration"		type="inventory_lookup"}
			{name="bt_action_name"				type="bt_action_name"}
			{name="is_blocking"					type="bool"}
		]
	}

	ai_unit_with_inventory_and_shield_and_target = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="health"						type="health"}
			{name="has_teleported"				type="teleports"}
			{name="position"					type="position"}
			{name="yaw_rot" 					type="enemy_yaw_rotation"}
			{name="velocity" 					type="enemy_velocity"}
			{name="breed_name" 					type="breed"}
			{name="uniform_scale"				type="enemy_uniform_scale"}
			{name="inventory_configuration"		type="inventory_lookup"}
			{name="bt_action_name"				type="bt_action_name"}
			{name="is_blocking"					type="bool"}
			{name="target_unit_id"				type="game_object_id"}
		]
	}

	ai_unit_storm_vermin_warlord = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}
			{name="health"						type="health"}
			{name="has_teleported"				type="teleports"}
			{name="position"					type="position"}
			{name="yaw_rot" 					type="enemy_yaw_rotation"}
			{name="velocity" 					type="enemy_velocity"}
			{name="breed_name" 					type="breed"}
			{name="uniform_scale"				type="enemy_uniform_scale"}
			{name="inventory_configuration"		type="inventory_lookup"}
			{name="bt_action_name"				type="bt_action_name"}
			{name="is_blocking"					type="bool"}
			{name="is_dodging"					type="bool"}
			{name="show_health_bar"				type="bool"}
		]
	}

	ai_lord_with_inventory_and_target = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="health"						type="health"}
			{name="has_teleported"				type="teleports"}
			{name="position"					type="position"}
			{name="yaw_rot" 					type="enemy_yaw_rotation"}
			{name="velocity" 					type="enemy_velocity"}
			{name="breed_name" 					type="breed"}
			{name="uniform_scale"				type="enemy_uniform_scale"}
			{name="inventory_configuration"		type="inventory_lookup"}
			{name="bt_action_name"				type="bt_action_name"}
			{name="target_unit_id"				type="game_object_id"}
			{name="show_health_bar"				type="bool"}
		]
	}

	ai_unit_with_inventory_and_target = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="health"						type="health"}
			{name="has_teleported"				type="teleports"}
			{name="position"					type="position"}
			{name="yaw_rot" 					type="enemy_yaw_rotation"}
			{name="velocity" 					type="enemy_velocity"}
			{name="breed_name" 					type="breed"}
			{name="uniform_scale"				type="enemy_uniform_scale"}
			{name="inventory_configuration"		type="inventory_lookup"}
			{name="bt_action_name"				type="bt_action_name"}
			{name="target_unit_id"				type="game_object_id"}
		]
	}


	ai_unit_ratling_gunner = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="health"						type="health"}
			{name="has_teleported"				type="teleports"}
			{name="position"					type="position"}
			{name="yaw_rot" 					type="enemy_yaw_rotation"}
			{name="velocity" 					type="enemy_velocity"}
			{name="breed_name" 					type="breed"}
			{name="uniform_scale"				type="enemy_uniform_scale"}
			{name="inventory_configuration"		type="inventory_lookup"}

			{name="aim_target"					type="position"}
			{name="bt_action_name"				type="bt_action_name"}
		]
	}

	ai_unit_warpfire_thrower = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="health"						type="health"}
			{name="has_teleported"				type="teleports"}
			{name="position"					type="position"}
			{name="yaw_rot" 					type="enemy_yaw_rotation"}
			{name="velocity" 					type="enemy_velocity"}
			{name="breed_name" 					type="breed"}
			{name="uniform_scale"				type="enemy_uniform_scale"}
			{name="inventory_configuration"		type="inventory_lookup"}

			{name="aim_target"					type="position"}
			{name="bt_action_name"				type="bt_action_name"}

			{name="target_unit_id"				type="game_object_id"}
		]
	}

	ai_unit_stormfiend = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="health"						type="health"}
			{name="has_teleported"				type="teleports"}
			{name="position"					type="position"}
			{name="yaw_rot" 					type="enemy_yaw_rotation"}
			{name="velocity" 					type="enemy_velocity"}
			{name="breed_name" 					type="breed"}
			{name="uniform_scale"				type="enemy_uniform_scale"}
			{name="inventory_configuration"		type="inventory_lookup"}

			{name="aim_target"					type="position"}
			{name="bt_action_name"				type="bt_action_name"}
			{name="attack_arm"					type="attack_arm"}
			{name="target_unit_id"				type="game_object_id"}
		]
	}

	ai_unit_stormfiend_boss = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="health"						type="health"}
			{name="has_teleported"				type="teleports"}
			{name="position"					type="position"}
			{name="yaw_rot" 					type="enemy_yaw_rotation"}
			{name="velocity" 					type="enemy_velocity"}
			{name="breed_name" 					type="breed"}
			{name="show_health_bar"				type="bool"}
			{name="uniform_scale"				type="enemy_uniform_scale"}
			{name="inventory_configuration"		type="inventory_lookup"}

			{name="aim_target"					type="position"}
			{name="bt_action_name"				type="bt_action_name"}
			{name="attack_arm"					type="attack_arm"}
			{name="target_unit_id"				type="game_object_id"}

			{name="animation_synced_unit_id"	type="game_object_id"}
		]
	}


	ai_unit_grey_seer = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="health"						type="health"}
			{name="has_teleported"				type="teleports"}
			{name="position"					type="position"}
			{name="yaw_rot" 					type="enemy_yaw_rotation"}
			{name="velocity" 					type="enemy_velocity"}
			{name="breed_name" 					type="breed"}
			{name="uniform_scale"				type="enemy_uniform_scale"}
			{name="bt_action_name"				type="bt_action_name"}
			{name="show_health_bar"				type="bool"}
		]
	}


	ai_unit_pack_master = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="health"						type="health"}
			{name="has_teleported"				type="teleports"}
			{name="position"					type="position"}
			{name="yaw_rot" 					type="enemy_yaw_rotation"}
			{name="velocity" 					type="enemy_velocity"}
			{name="breed_name" 					type="breed"}
			{name="uniform_scale"				type="enemy_uniform_scale"}
			{name="inventory_configuration"		type="inventory_lookup"}
			{name="bt_action_name"				type="bt_action_name"}
		]
	}

	ai_unit_rat_ogre = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="position"					type="position"}
			{name="yaw_rot" 					type="enemy_yaw_rotation"}
			{name="velocity" 					type="enemy_velocity"}
			{name="breed_name" 					type="breed"}
			{name="uniform_scale"				type="enemy_uniform_scale"}
			{name="bt_action_name"				type="bt_action_name"}
		]
	}

	ai_unit_tentacle = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="health"						type="health"}
			{name="has_teleported"				type="teleports"}
			{name="position"					type="position"}
			{name="rotation" 					type="enemy_rotation"}
			{name="velocity" 					type="enemy_velocity"}
			{name="breed_name" 					type="breed"}
			{name="uniform_scale"				type="enemy_uniform_scale"}
			{name="bt_action_name"				type="bt_action_name"}
			{name="reach_distance" 				type="tentacle_reach_distance"}
			{name="portal_unit_id"				type="game_object_id"}
			{name="tentacle_template_id"		type="tentacle_template_id"}
		]
	}

	ai_unit_vortex = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="has_teleported"				type="teleports"}
			{name="position"					type="position"}
			{name="yaw_rot" 					type="enemy_yaw_rotation"}
			{name="velocity" 					type="enemy_velocity"}
			{name="breed_name" 					type="breed"}
			{name="uniform_scale"				type="enemy_uniform_scale"}
			{name="bt_action_name"				type="bt_action_name"}
			{name="inner_radius_percentage"		type="percentage"}
			{name="fx_radius_percentage"		type="percentage"}
			{name="height_percentage"			type="percentage"}
			{name="vortex_template_id"			type="vortex_template_id"}
			{name="inner_decal_unit_id"			type="game_object_id"}
			{name="outer_decal_unit_id"			type="game_object_id"}
			{name="owner_unit_id"				type="game_object_id"}
		]
	}

	ai_unit_plague_wave_spawner = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}
			{name="position"					type="position"}
			{name="yaw_rot" 					type="enemy_yaw_rotation"}
			{name="breed_name" 					type="breed"}
			{name="bt_action_name"				type="bt_action_name"}
		]
	}

	ai_unit_tentacle_portal = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="position"					type="position"}
			{name="rotation" 					type="enemy_rotation"}
			{name="health"						type="health"}
		]
	}



	aoe_projectile_unit = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="speed" 						type="projectile_speed"}
			{name="angle"		 				type="projectile_angle"}
			{name="gravity_settings"			type="lookup"}
			{name="target_vector" 				type="position"}
			{name="initial_position" 			type="position"}
			{name="trajectory_template_name" 	type="lookup"}
			{name="owner_unit"					type="game_object_id"}

			{name="server_side_raycast"			type="bool"}
			{name="collision_filter"			type="lookup"}

			{name="impact_template_name" 		type="lookup"}

			{name="aoe_dot_damage" 				type="damage"}
			{name="aoe_init_damage" 			type="damage"}
			{name="aoe_dot_damage_interval" 	type="damage_interval"}
			{name="radius" 						type="radius"}
			{name="life_time" 					type="life_time"}
			{name="damage_players" 				type="bool"}
			{name="player_screen_effect_name"	type="lookup"}
			{name="dot_effect_name"				type="lookup"}
 			{name="area_damage_template" 		type="lookup"}
 			{name="damage_source_id"				type="damage_source_id"}
		]
	}

	player_projectile_unit = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="position"					type="position"}
			{name="rotation"					type="rotation"}

			{name="angle"		 				type="projectile_angle"}
			{name="speed"						type="projectile_speed"}
			{name="target_vector" 				type="direction"}
			{name="initial_position" 			type="position"}
			{name="gravity_settings"			type="lookup"}
			{name="trajectory_template_name"	type="lookup"}

			{name="owner_unit"					type="game_object_id"}
			{name="item_name"					type="weapon_id"}
			{name="item_template_name"			type="item_template_name"}
			{name="action_name"					type="action"}
			{name="sub_action_name"				type="sub_action"}
			{name="fast_forward_time"			type="short_time"}
			{name="rotate_around"				type="bool"}
			{name="scale"						type="scale"}
			{name="power_level"					type="power_level"}
		]
	}

	flame_wave_projectile_unit = {
		priority=1
		update_rate=1
		fields = [

			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="owner_unit"					type="game_object_id"}

			{name="item_name"					type="weapon_id"}
			{name="item_template_name"			type="item_template_name"}
			{name="action_name"					type="action"}
			{name="sub_action_name"				type="sub_action"}

			{name="scale"						type="scale"}
			{name="position" 					type="position"}
			{name="flat_angle"					type="angle"}
			{name="lateral_speed"				type="flame_wave_lateral_speed"}
			{name="initial_forward_speed"		type="unsigned_speed"}
			{name="distance_travelled"			type="flame_wave_distance"}
		]
	}

	pickup_projectile_unit = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}
			{name="position"					type="position"}
			{name="rotation"					type="rotation"}

			{name="network_position"			type="int_position"}
			{name="network_rotation"			type="int_rotation"}
			{name="network_velocity"			type="int_velocity"}
			{name="network_angular_velocity"	type="int_velocity"}
			{name="debug_pos"					type="position"}

			{name="pickup_name"					type="lookup"}
			{name="has_physics"					type="bool"}
			{name="spawn_type"					type="lookup"}
		]
	}

	pickup_torch_unit_init = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}
			{name="position"					type="position"}
			{name="rotation"					type="rotation"}

			{name="network_position"			type="int_position"}
			{name="network_rotation"			type="int_rotation"}
			{name="network_velocity"			type="int_velocity"}
			{name="network_angular_velocity"	type="int_velocity"}
			{name="debug_pos"					type="position"}

			{name="pickup_name"					type="lookup"}
			{name="has_physics"					type="bool"}
			{name="spawn_type"					type="lookup"}
		]
	}

	pickup_torch_unit = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}
			{name="position"					type="position"}
			{name="rotation"					type="rotation"}

			{name="network_position"			type="int_position"}
			{name="network_rotation"			type="int_rotation"}
			{name="network_velocity"			type="int_velocity"}
			{name="network_angular_velocity"	type="int_velocity"}
			{name="debug_pos"					type="position"}

			{name="pickup_name"					type="lookup"}
			{name="has_physics"					type="bool"}
			{name="spawn_type"					type="lookup"}
		]
	}

	pickup_projectile_unit_limited = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}
			{name="position"					type="position"}
			{name="rotation"					type="rotation"}

			{name="network_position"			type="int_position"}
			{name="network_rotation"			type="int_rotation"}
			{name="network_velocity"			type="int_velocity"}
			{name="network_angular_velocity"	type="int_velocity"}
			{name="debug_pos"					type="position"}

			{name="pickup_name"					type="lookup"}
			{name="has_physics"					type="bool"}
			{name="spawn_type"					type="lookup"}

			{name="spawner_unit"				type="level_unit_index"}
			{name="limited_item_id"				type="limited_item_index"}
		]
	}

	pickup_training_dummy_unit = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 									type="game_object_type"}
			{name="husk_unit" 									type="husk_unit"}
			{name="position"									type="position"}
			{name="rotation"									type="rotation"}

			{name="network_position"							type="int_position"}
			{name="network_rotation"							type="int_rotation"}
			{name="network_velocity"							type="int_velocity"}
			{name="network_angular_velocity"					type="int_velocity"}

			{name="pickup_name"									type="lookup"}
			{name="has_physics"									type="bool"}
			{name="spawn_type"									type="lookup"}
			{name="damage"										type="damage"}
		]
	}

	explosive_pickup_projectile_unit = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 									type="game_object_type"}
			{name="husk_unit" 									type="husk_unit"}
			{name="position"									type="position"}
			{name="rotation"									type="rotation"}

			{name="network_position"							type="int_position"}
			{name="network_rotation"							type="int_rotation"}
			{name="network_velocity"							type="int_velocity"}
			{name="network_angular_velocity"					type="int_velocity"}
			{name="debug_pos"									type="position"}

			{name="pickup_name"									type="lookup"}
			{name="has_physics"									type="bool"}
			{name="spawn_type"									type="lookup"}

			{name="damage"										type="damage"}

			{name="explode_time"								type="clock_time"}
			{name="fuse_time"									type="fuse_time"}
			{name="item_name"									type="weapon_id"}
		]
	}

	explosive_pickup_projectile_unit_limited = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}
			{name="position"					type="position"}
			{name="rotation"					type="rotation"}

			{name="network_position"			type="int_position"}
			{name="network_rotation"			type="int_rotation"}
			{name="network_velocity"			type="int_velocity"}
			{name="network_angular_velocity"	type="int_velocity"}
			{name="debug_pos"					type="position"}

			{name="pickup_name"					type="lookup"}
			{name="has_physics"					type="bool"}
			{name="spawn_type"					type="lookup"}

			{name="spawner_unit"				type="level_unit_index"}
			{name="limited_item_id"				type="limited_item_index"}

			{name="damage"						type="damage"}

			{name="explode_time"				type="clock_time"}
			{name="fuse_time"					type="fuse_time"}
			{name="item_name"					type="weapon_id"}
		]
	}

	true_flight_projectile_unit = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}
			{name="position"					type="position"}
			{name="rotation"					type="rotation"}

			{name="true_flight_template_id" 	type="lookup"}
			{name="target_unit_id"				type="game_object_id"}
			{name="angle"						type="projectile_angle"}
			{name="initial_position" 			type="position"}
			{name="target_vector" 				type="position"}
			{name="speed" 						type="projectile_speed"}
			{name="gravity_settings"			type="lookup"}
			{name="trajectory_template_id"		type="lookup"}

			{name="collision_filter"	 		type="lookup"}
			{name="server_side_raycast" 		type="bool"}
			{name="owner_unit"					type="game_object_id"}

			{name="item_name"					type="weapon_id"}
			{name="item_template_name"			type="item_template_name"}
			{name="action_name"					type="action"}
			{name="sub_action_name"				type="sub_action"}
			{name="scale"						type="scale"}
			{name="power_level"					type="power_level"}
		]
	}

	ai_true_flight_projectile_unit = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}
			{name="position"					type="position"}
			{name="rotation"					type="rotation"}

			{name="true_flight_template_id" 	type="lookup"}
			{name="target_unit_id"				type="game_object_id"}
			{name="angle"						type="projectile_angle"}
			{name="initial_position" 			type="position"}
			{name="target_vector" 				type="position"}
			{name="speed" 						type="projectile_speed"}
			{name="gravity_settings"			type="lookup"}
			{name="trajectory_template_id"		type="lookup"}

			{name="impact_template_name" 		type="lookup"}
			{name="collision_filter"	 		type="lookup"}
			{name="server_side_raycast" 		type="bool"}
			{name="owner_unit"					type="game_object_id"}
		]
	}

	ai_true_flight_killable_projectile_unit = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}
			{name="position"					type="position"}
			{name="rotation"					type="rotation"}

			{name="true_flight_template_id" 	type="lookup"}
			{name="target_unit_id"				type="game_object_id"}
			{name="angle"						type="projectile_angle"}
			{name="initial_position" 			type="position"}
			{name="target_vector" 				type="position"}
			{name="speed" 						type="projectile_speed"}
			{name="gravity_settings"			type="lookup"}
			{name="trajectory_template_id"		type="lookup"}


			{name="impact_template_name" 		type="lookup"}
			{name="collision_filter"	 		type="lookup"}
			{name="server_side_raycast" 		type="bool"}
			{name="owner_unit"					type="game_object_id"}
			{name="health"						type="health"}

		]
	}

	ai_true_flight_projectile_unit_without_raycast = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}
			{name="position"					type="position"}
			{name="rotation"					type="rotation"}

			{name="true_flight_template_id" 	type="lookup"}
			{name="target_unit_id"				type="game_object_id"}
			{name="angle"						type="projectile_angle"}
			{name="initial_position" 			type="position"}
			{name="target_vector" 				type="position"}
			{name="speed" 						type="projectile_speed"}
			{name="gravity_settings"			type="lookup"}
			{name="trajectory_template_id"		type="lookup"}

			{name="impact_template_name" 		type="lookup"}
			{name="owner_unit"					type="game_object_id"}
		]
	}

	projectile_unit = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="speed" 						type="projectile_speed"}
			{name="angle"		 				type="projectile_angle"}
			{name="target_vector" 				type="position"}
			{name="initial_position" 			type="position"}
			{name="trajectory_template_name"	type="lookup"}
			{name="impact_template_name" 		type="lookup"}
			{name="owner_unit"					type="game_object_id"}
		]
	}

	damage_wave_unit = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="position"					type="position"}
			{name="husk_unit" 					type="husk_unit"}

			{name="damage_wave_template_name"	type="lookup"}
			{name="source_unit"					type="game_object_id"}
			{name="rotation" 					type="enemy_rotation"}
			{name="height_percentage"			type="percentage"}
		]
	}

	damage_blob_unit = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="position"					type="position"}
			{name="husk_unit" 					type="husk_unit"}

			{name="damage_blob_template_name"	type="lookup"}
			{name="source_unit"					type="game_object_id"}
			{name="rotation" 					type="enemy_rotation"}
		]
	}

	liquid_aoe_unit = {
		priority=1
		update_rate=10
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="liquid_area_damage_template"	type="lookup"}
			{name="source_unit"					type="game_object_id"}
			{name="position" 					type="position"}
			{name="rotation" 					type="rotation"}
		]
	}

	aoe_unit = {
		priority=1
		update_rate=10
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="position" 					type="position"}
			{name="rotation" 					type="rotation"}
			{name="aoe_dot_damage" 				type="damage"}
			{name="aoe_init_damage" 			type="damage"}
			{name="aoe_dot_damage_interval" 	type="damage_interval"}
			{name="radius" 						type="radius"}
			{name="life_time" 					type="life_time"}
			{name="player_screen_effect_name"	type="lookup"}
			{name="dot_effect_name"				type="lookup"}
 			{name="extra_dot_effect_name"		type="lookup"}
 			{name="area_damage_template" 		type="lookup"}
 			{name="invisible_unit"				type="bool"}
 			{name="explosion_template_name"		type="lookup"}
 			{name="owner_player_id"				type="game_object_id"}
		]
	}

	timed_explosion_unit = {
		priority=1
		update_rate=10
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="position" 					type="position"}
			{name="rotation" 					type="rotation"}
		]
	}

	pickup_unit = {
		priority=1
		update_rate=10
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="pickup_name" 				type="lookup"}
			{name="has_physics" 				type="bool"}
			{name="spawn_type" 					type="lookup"}
			{name="position" 					type="position"}
			{name="rotation" 					type="rotation"}
		]
	}

	objective_pickup_unit = {
		priority=1
		update_rate=10
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="pickup_name" 				type="lookup"}
			{name="has_physics" 				type="bool"}
			{name="spawn_type" 					type="lookup"}
			{name="position" 					type="position"}
			{name="rotation" 					type="rotation"}
		]
	}

	prop_unit = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}
		]
	}

	overpowering_blob_unit = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}
			{name="health"						type="health"}
		]
	}

	network_synched_dummy_unit = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="position" 					type="position"}
			{name="yaw_rot" 					type="dummy_yaw_rotation"}
			{name="uniform_scale"				type="dummy_uniform_scale"}
		]
	}

	buff_aoe_unit = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="position" 					type="position"}
			{name="life_time"					type="life_time"}
			{name="removal_proc_function_id"	type="proc_function_lookup"}
			{name="radius"						type="radius"}
			{name="owner_player_id"				type="game_object_id"}
		]
	}

	thrown_weapon_unit = {
		priority=1
		update_rate=1
		fields = [
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="position"					type="position"}
			{name="rotation" 					type="rotation"}
		]
	}


	interest_point_unit = {
		priority=1
		update_rate=1
		fields=[
			{name="go_type" 					type="game_object_type"}
			{name="husk_unit" 					type="husk_unit"}

			{name="position" 					type="position"}
			{name="rotation" 					type="rotation"}
		]
	}

	interest_point_level_unit = {
		priority=1
		update_rate=1
		fields=[
			{name="go_type" 					type="game_object_type"}
		]
	}

	music_states = {
		priority=1
		update_rate=1
		fields=[
			{name="go_type" 					type="game_object_type"}

			{name="combat_intensity"			type="music_group_states"}
			{name="game_state" 					type="music_group_states"}
			{name="boss_state" 					type="music_group_states"}
		]
	}

	keep_decoration_painting = {
		priority=1
		update_rate=1
		fields=[
			{name="go_type" 					type="game_object_type"}
			{name="level_unit_index"			type="level_unit_index"}
			{name="painting_index"				type="lookup"}
		]
	}

	sync_unit = {
		priority=1
		update_rate=1
		fields=[
			{name="go_type" 					type="game_object_type"}
			{name="sync_name"					type="sync_names"}
		]
	}

	payload = {
		priority=1
		update_rate=1
		fields=[
			{name="go_type" 					type="game_object_type"}

			{name="level_unit_index"			type="level_unit_index"}
			{name="spline_index"				type="payload_spline_index"}
			{name="subdivision_index"			type="payload_spline_subdivisions"}
			{name="spline_t"					type="payload_spline_t"}
			{name="speed"						type="payload_speed"}
		]
	}

	twitch_vote = {
		priority=1
		update_rate=1
		fields=[
			{name="go_type" 					type="game_object_type"}

			{name="vote_key"					type="uint_8"}
			{name="vote_type"					type="twitch_lookup"}

			{name="options"						type="twitch_options"}
			{name="vote_templates" 				type="twitch_template_lookup"}
			//{name="option_a"					type="uint_32"}
			//{name="option_b"					type="uint_32"}
			//{name="option_c"					type="uint_32"}
			//{name="option_d"					type="uint_32"}
			//{name="option_e"					type="uint_32"}
//
			//{name="vote_template_a"				type="lookup"}
			//{name="vote_template_b"				type="lookup"}
			{name="time"						type="uint_8"}
			{name="show_vote_ui"				type="bool"}
		]
	}
}
